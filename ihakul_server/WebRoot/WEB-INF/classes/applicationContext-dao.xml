<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns= "http://www.springframework.org/schema/beans"
       xmlns:xsi= "http://www.w3.org/2001/XMLSchema-instance" xmlns:aop= "http://www.springframework.org/schema/aop"
       xmlns:context= "http://www.springframework.org/schema/context" xmlns:tx= "http://www.springframework.org/schema/tx"
       xmlns:jpa= "http://www.springframework.org/schema/data/jpa"
       xmlns:security= "http://www.springframework.org/schema/security"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation= "
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-3.2.xsd
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/data/jpa
            http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.0.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task-3.2.xsd">
    
  	<!-- c3p0连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		>
     	<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	
	
		<!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="3" />
		<!-- 连接池中保留的最小连接数。 -->
		<property name="minPoolSize" value="1" />
		
		<!-- 连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="30" />
		<!-- 最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="60" />
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="500" />
		<!-- 每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />		
	</bean>

	<!-- 阿里 druid 数据库连接池 -->  
  	<!-- <bean id = "dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">    
       数据库基本信息配置  
       <property name = "url" value = "${jdbc.url}" />    
       <property name = "username" value = "${jdbc.username}" />    
       <property name = "password" value = "${jdbc.password}" />    
       <property name = "driverClassName" value = "${jdbc.driverClassName}" />    
       <property name = "filters" value = "${filters}" />    
        最大并发连接数  
       <property name = "maxActive" value = "${maxActive}" />  
       初始化连接数量  
       <property name = "initialSize" value = "${initialSize}" />  
       配置获取连接等待超时的时间  
       <property name = "maxWait" value = "${maxWait}" />  
       最小空闲连接数  
       <property name = "minIdle" value = "${minIdle}" />    
       配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒  
       <property name = "timeBetweenEvictionRunsMillis" value ="${timeBetweenEvictionRunsMillis}" />  
       配置一个连接在池中最小生存的时间，单位是毫秒  
       <property name = "minEvictableIdleTimeMillis" value ="${minEvictableIdleTimeMillis}" />    
       <property name = "validationQuery" value = "${validationQuery}" />    
       <property name = "testWhileIdle" value = "${testWhileIdle}" />    
       <property name = "testOnBorrow" value = "${testOnBorrow}" />    
       <property name = "testOnReturn" value = "${testOnReturn}" />    
       <property name = "maxOpenPreparedStatements" value ="${maxOpenPreparedStatements}" />  
       打开 removeAbandoned 功能  
       <property name = "removeAbandoned" value = "${removeAbandoned}" />  
       1800 秒，也就是 30 分钟  
       <property name = "removeAbandonedTimeout" value ="${removeAbandonedTimeout}" />  
       关闭 abanded 连接时输出错误日志     
       <property name = "logAbandoned" value = "${logAbandoned}" />  
  </bean > -->
  
   <!--spring 配置sessionFactory   -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
			<!-- 数据库方言 mysql -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
			<!-- 	格式化输出的sql语句(可选)  -->
				<!-- <prop key="hibernate.format_sql">true</prop> -->
			<!-- 	是否打印sql语句  -->
				<prop key="hibernate.show_sql">true</prop>
				<!--  配置二级缓存
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				由于查询的缓存命中率很低，所以关掉查询时的二级缓存 
				<prop key="hibernate.cache.use_query_cache">false</prop>
				 配置二级缓存的相应的类 
				<prop key=" hibernate.cache.provider_class">
				org.hibernate.cache.EhCacheProvider
				</prop> -->
				<!-- <prop key="current_session_context_class">thread</prop> -->
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate3.SpringSessionContext</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.xiaoai.entity</value>
			</list>
		</property>	
		<property name="annotatedClasses">
			<list>
				<value>com.xiaoai.entity.Role</value>
				<value>com.xiaoai.entity.Administrate</value>
				<value>com.xiaoai.entity.Familygroup</value>
				<value>com.xiaoai.entity.Household</value>
				<value>com.xiaoai.entity.Users</value>
				<value>com.xiaoai.entity.Xiaoi</value>
				<value>com.xiaoai.entity.Xiaoilog</value>
				<value>com.xiaoai.entity.Privilege</value>
				<value>com.xiaoai.entity.Versions</value>
				<value>com.xiaoai.entity.Datadictionary</value>
				<value>com.xiaoai.entity.FamilyUser</value>
				<value>com.xiaoai.entity.Channel</value>
				<value>com.xiaoai.entity.XiaoiSMS</value>
				<value>com.xiaoai.entity.XiaoiSMSMessage</value>
				<value>com.xiaoai.entity.Xiaoiurl</value>
				<value>com.xiaoai.entity.Xiaoitask</value>
				<value>com.xiaoai.entity.XiaoiMode</value>
				<value>com.xiaoai.entity.Info</value>
			</list>
		</property></bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	   	
</beans>